<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.alpha.mybatis.generator.mapper.OrderdetailMapper">
  <resultMap id="BaseResultMap" type="org.alpha.mybatis.generator.po.Orderdetail">
    <result column="orderdetail_id" jdbcType="INTEGER" property="orderdetailId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="itemId" jdbcType="INTEGER" property="itemid" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="discount" jdbcType="DOUBLE" property="discount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    orderdetail_id, order_id, itemId, number, discount
  </sql>
  <select id="selectByExample" parameterType="org.alpha.mybatis.generator.po.OrderdetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orderdetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.alpha.mybatis.generator.po.OrderdetailExample">
    delete from orderdetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.alpha.mybatis.generator.po.Orderdetail">
    insert into orderdetail (orderdetail_id, order_id, itemId, 
      number, discount)
    values (#{orderdetailId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{itemid,jdbcType=INTEGER}, 
      #{number,jdbcType=INTEGER}, #{discount,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="org.alpha.mybatis.generator.po.Orderdetail">
    insert into orderdetail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderdetailId != null">
        orderdetail_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="itemid != null">
        itemId,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="discount != null">
        discount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderdetailId != null">
        #{orderdetailId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="itemid != null">
        #{itemid,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.alpha.mybatis.generator.po.OrderdetailExample" resultType="java.lang.Long">
    select count(*) from orderdetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orderdetail
    <set>
      <if test="record.orderdetailId != null">
        orderdetail_id = #{record.orderdetailId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.itemid != null">
        itemId = #{record.itemid,jdbcType=INTEGER},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.discount != null">
        discount = #{record.discount,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orderdetail
    set orderdetail_id = #{record.orderdetailId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      itemId = #{record.itemid,jdbcType=INTEGER},
      number = #{record.number,jdbcType=INTEGER},
      discount = #{record.discount,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>